import{writeFileSync as e}from"node:fs";import{fatal as t}from"@triforce-heroes/triforce-core/Console";import{supportedLanguages as r,translate as o}from"@triforce-heroes/triforce-core/Translator";import n from"p-queue";import{loadEngineDriver as s,loadSourceDriver as i}from"../drivers/index.js";import{printProgress as a}from"../utils/progress.js";export async function PrepareCommand(l,d,p,c){let u,f;let m=i(d);void 0===m&&t(`Unsupported source driver: ${d}`);let g=s(l);void 0===g&&t(`Unsupported engine driver: ${l}`),c?.translate===void 0||([u,f]=c.translate.split(":"),(void 0===u||void 0===f)&&t(`Invalid translate pairs option: ${c.translate}`),r.includes(u)||t(`Invalid source language: ${u}`),r.includes(f)||t(`Invalid target language: ${f}`)),process.stdout.write("Compiling... ");let v=await m.entries(p,g);if(e("entries.json",JSON.stringify(v,null,2)),process.stdout.write("OK\n"),void 0!==u&&void 0!==f){let t,r;process.stdout.write("Translating...\n\n"),a(0,v.length);let s=0,i=setInterval(()=>{t!==r&&(r=t,a(s,v.length,r))},1e3),l=new n({concurrency:8});for(let e of v)l.add(async()=>{let r=g.parse(e.source),n=r.toCompressed(),i=n.toText(),a=await o("http://127.0.0.1:7900",u,f,i);s++,e.translation=n.fromCompressed(a??"",r),e.translationIndex=g.parse(e.translation).toIndex(),t={from:r.toIndex(),to:e.translationIndex}});await l.onIdle(),clearInterval(i),a(v.length,v.length),e("entries.json",JSON.stringify(v,null,2)),process.stdout.write("DONE\n")}}