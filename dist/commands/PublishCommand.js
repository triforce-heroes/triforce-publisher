import{existsSync as e,readFileSync as s,writeFileSync as n}from"node:fs";import{fatal as t}from"@triforce-heroes/triforce-core/Console";import{getEngine as o}from"../database/EngineDatabase.js";import{getEntries as r,updateEntries as i}from"../database/EntryDatabase.js";import{getEntryHash as a}from"../utils/HashUtils.js";import{isSame as l}from"../utils/ObjectUtils.js";export async function PublishCommand(u,d){e("./publishable.json")||t("No publishable.ts found"),process.stdout.write("Reading publishable entries... ");let c=JSON.parse(s("./publishable.json","utf8"));process.stdout.write("OK\n"),d.dryRun||null!==await o(u)||t(`Engine not found: ${u}`);let m=new Map((await r(u,d.testRun)).map(e=>[e.index,e])),p=[],f=new Map,b=new Map;for(let e of c){let s=m.get(e.index);if(void 0===s&&d.testRun)continue;let n=a(e),t=f.get(n);void 0===t&&f.set(n,e.index);let o=JSON.stringify({...e.sources}),r=b.get(o);void 0===r&&b.set(o,e.index);let i=void 0!==t||r!==t,c={engine:u,index:e.index,resource:e.resource,reference:e.reference,context:e.context,sources:i?{}:e.sources,translations:i?{}:e.translations,sourceIndex:i?null:e.sourceIndex,translationIndex:i?null:e.translationIndex,same:t??null,sameSources:void 0!==r&&r!==t?r:null};void 0===s?p.push(c):null!==c.same&&c.same!==s.same?p.push(c):null!==c.sameSources&&c.sameSources!==s.sameSources?p.push(c):null!==c.same||(c.sourceIndex!==s.sourceIndex?p.push(c):l(c.sources,s.sources)&&l(c.translations,s.translations)||p.push(c))}if(n("./publishable-unfiltered.json",JSON.stringify(p,null,2)),!d.dryRun)for(let e=0;e<p.length;e+=1e3)await i(u,p.slice(e,e+1e3));process.stdout.write("\nDONE!\n")}