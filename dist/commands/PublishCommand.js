import{existsSync as e,readFileSync as s,writeFileSync as t}from"node:fs";import{fatal as n}from"@triforce-heroes/triforce-core/Console";import{getEngine as a}from"../database/EngineDatabase.js";import{getEntries as r,updateEntries as l}from"../database/EntryDatabase.js";import{getEntryHash as o}from"../utils/HashUtils.js";import{isSame as i}from"../utils/ObjectUtils.js";export async function PublishCommand(u,d){e("./publishable.json")||n("No publishable.ts found"),process.stdout.write("Reading publishable entries... ");let c=JSON.parse(s("./publishable.json","utf8"));process.stdout.write("OK\n"),d.dryRun||null===await a(u)&&n(`Engine not found: ${u}`);let f=new Map((await r(u,d.testRun)).map(e=>[e.index,e])),p=[],m=new Map,x=new Map,b=0,y=0,g=Date.now();for(let e of c){let s=f.get(e.index);if(void 0===s&&d.testRun)continue;let t=o(e),n=m.get(t);void 0===n&&m.set(t,e.index);let a=JSON.stringify({...e.sources}),r=x.get(a);void 0===r&&x.set(a,e.index);let l=void 0!==n||r!==n,c={engine:u,index:e.index,resource:e.resource,reference:e.reference,context:e.context,sources:l?{}:e.sources,translations:l?{}:e.translations,sourceIndex:l?null:e.sourceIndex,translationIndex:l?null:e.translationIndex,translatedBy:e.translatedBy??null,translatedAt:e.translatedAt??null,same:n??null,sameSources:void 0!==r&&r!==n?r:null};if(null===c.same&&null===c.sameSources){if(null===c.translatedBy)if("string"!=typeof c.sourceIndex||/[a-z]/i.test(c.sourceIndex)){if(void 0!==c.sources&&1===Object.keys(c.sources).length)c.translationIndex=c.sourceIndex,c.translatedBy=16,c.translatedAt=g,y++;else if(void 0!==c.sources&&void 0!==c.translations)for(let[e,s]of Object.entries(c.sources)){let t=e.split(",");if(t.includes("en")&&t.includes("es")&&s===c.translations[e]){c.translationIndex=c.sourceIndex,c.translatedBy=16,c.translatedAt=g,y++;break}}}else c.translationIndex=c.sourceIndex,c.translatedBy=16,c.translatedAt=g,y++}else b++;void 0===s||null!==c.translatedBy&&c.translatedBy!==s.translatedBy&&null===s.translatedBy||null!==c.same&&c.same!==s.same||null!==c.sameSources&&c.sameSources!==s.sameSources?p.push(c):null===c.same&&(c.sourceIndex!==s.sourceIndex?p.push(c):i(c.sources,s.sources)&&i(c.translations,s.translations)||p.push(c))}if(t("./publishable-unfiltered.json",JSON.stringify(p,null,2)),!d.dryRun)for(let e=0;e<p.length;e+=1e3)await l(u,p.slice(e,e+1e3));function h(e,s){process.stdout.write(`
 ${e>=0?" ":"-"} ${String(e).padStart(5," ")}    ${s}`)}process.stdout.write(`
ENTRIES:`),h(c.length,"TOTAL"),h(b,"(Duplicates)"),h(y,'(Keep "as-is")'),process.stdout.write(`
 ---------`),h(c.length-b-y,"SUBTOTAL"),process.stdout.write("\n\nDONE!\n")}