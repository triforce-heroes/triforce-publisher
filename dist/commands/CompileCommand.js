import{existsSync as e,readFileSync as t,writeFileSync as s}from"node:fs";import{fatal as r}from"@triforce-heroes/triforce-core/Console";import{secureHash as n}from"@triforce-heroes/triforce-core/Hash";import o from"chalk";import l from"p-queue";import{loadEngineDriver as i}from"../drivers/index.js";import{getEntryKey as a}from"../utils/entry.js";import{translate as f}from"../utils/google.js";import{guessLocale as c,simplifyLocales as u,weakLocales as d}from"../utils/locale.js";import{printProgress as p}from"../utils/progress.js";import{delay as g}from"../utils/utils.js";function m(s){return e(`./${s}/entries_default.json`)?JSON.parse(t(`./${s}/entries_default.json`,"utf8")):e(`./entries_${s}.json`)?JSON.parse(t(`./entries_${s}.json`,"utf8")):void r(`No entries.json found in ${s}`)}function w(e){return Object.fromEntries([...e.entries()].map(([e,t])=>[u(t).join(","),e]))}class h{constructor(e,t,s){this.name=e,this.toTranslator=t,this.fromTranslator=s}}class v extends h{constructor(){super("drop",e=>$(e,()=>" ").trim(),e=>e)}}function $(e,t){return e.replaceAll(/<(\d+)>/g,(e,s)=>t(Number(s)))}function S(e,t){return`<${t}>`}let x=[new h("default",e=>$(e,e=>` <${String(e)}> `),e=>e.replaceAll(/\s*<\s*(\d+)\s*>\s*/g,S)),new h("hashtag",e=>$(e,e=>` #${String(e)} `),e=>e.replaceAll(/\s*(?:#|n\s*ยบ)\s*(\d+)\s*/g,S)),new h("percent",e=>$(e,e=>` (${String(e)}%) `),e=>e.replaceAll(/\s*\(\s*(\d+)\s*%\s*\)\s*/g,S)),new h("brackets",e=>$(e,e=>` [${String(e)}] `),e=>e.replaceAll(/\s*\[\s*(\d+)\s*\]\s*/g,S)),new h("double arrows",e=>$(e,e=>` <<${String(e)}>> `),e=>e.replaceAll(/\s*<\s*<\s*(\d+)\s*>\s*>\s*/g,S)),new h("quotes",e=>$(e,e=>` ("${String(e)}") `),e=>e.replaceAll(/\s*\(\s*"\s*(\d+)\s*"\s*\)\s*/g,S)),new h("hr id",e=>$(e,e=>` <hr id="${String(e)}" /> `),e=>e.replaceAll(/\s*<hr\s*id\s*=\s*"\s*(\d+)\s*"\s*\/\s*>\s*/g,S)),new h("ears",e=>$(e,e=>` )<${String(e)}>( `),e=>e.replaceAll(/\s*\)\s*<\s*(\d+)\s*>\s*\(\s*/g,S)),new h("eyes",e=>$(e,e=>` (.)<${String(e)}>(.) `),e=>e.replaceAll(/\s*\(\s*\.\s*\)\s*<\s*(\d+)\s*>\s*\(\s*\.\s*\)\s*/g,S)),new v];function j(e){return[...e.matchAll(/<(\d+)>/g)].map(e=>Number(e[1]))}export async function CompileCommand(u,h,$){let S=i(u);void 0===S&&r(`Unsupported engine driver: ${u}`);let A=h.split(" ");if(0===A.length&&r("No languages specified"),$?.translate!==void 0)for(let e of A)void 0===c(e)&&r(`Invalid source language: ${$.translate}`);let I=new Map;for(let e of A){let t=c(e);void 0===t&&r(`Unsupported language: ${e}`),I.set(e,t)}let b=new Map;for await(let[r,n]of I.entries()){let i=m(r);if($?.translate===void 0)b.set(n,new Map(i.map(e=>[a(e),[e.source]])));else{let c,u;process.stdout.write(`Translating from ${r} as ${n}...

`);let m=`./cached-translations.${n}.json`,w=new Map(e(m)?JSON.parse(t(m,"utf8")):[]),h=0,A=setInterval(()=>{c!==u&&(u=c,p(h,i.length,u))},1e3);function N(){process.stdout.write(o.greenBright("  CACHE SAVED\n\n")),s(m,JSON.stringify([...w.entries()],null,2))}let I=setInterval(N,6e4);p(0,i.length);let y=new l({concurrency:$.concurrences});for(let e of i)y.add(async()=>{let t=S.parse(e.source),s=t.toCompressed(),r=s.toCompressed(),o=r.toText(),l=null;if(w.has(o))l=w.get(o);else{let e=j(o);e:for(let t=0;t<3;t++)for(let s of x){if(l=null,s instanceof v)break e;try{l=await f(n,$.translate,s.toTranslator(o),$.cookieId)}catch{await g(1e3*t);continue e}if(e.length>0&&JSON.stringify(e)!==JSON.stringify(j(s.fromTranslator(l)))){if(d.includes(n)){l=null;break e}continue}if(!(l=s.fromTranslator(l)).includes("><")){w.set(o,l);break e}}}h++,e.translation=s.fromCompressed(r.fromCompressed(l??"",s),t),e.translationIndex=S.parse(e.translation).toIndex(),c={from:t.toIndex(),to:e.translationIndex}});await y.onIdle(),clearInterval(I),N(),clearInterval(A),p(i.length,i.length),b.set(r,new Map(i.map(e=>[a(e),[e.source,e.translation,e.translationIndex]])))}}process.stdout.write("Preparing publishables... ");let y=[],C=m(A.at(0)),O=new Set;for await(let e of C.values()){let t=a(e),s=new Map,r=new Map;for(let[e,n]of I.entries()){let o=b.get(e);if(void 0===o)continue;let[l,i]=o.get(t);if(s.has(l))s.get(l).push(e);else if(s.set(l,[e]),$?.letters&&!d.includes(n))for(let e of S.parse(l).toCompressed().toText())O.add(e.codePointAt(0));if($?.translate!==void 0){if(r.has(i))r.get(i).push(e);else if(r.set(i,[e]),$.letters)for(let e of S.parse(i).toCompressed().toText())O.add(e.codePointAt(0))}}let o=b.get(A.at(0))?.get(t)?.[2],l={index:await n(Buffer.from(t)),resource:e.resource,reference:e.reference,...void 0!==e.context&&{context:e.context},sourceIndex:e.sourceIndex,...$?.translate!==void 0&&void 0!==o&&{translationIndex:o},sources:w(s),...$?.translate!==void 0&&{translations:w(r)}};y.push(l)}if($?.uniques){let e=new Set;for(let t of y)for(let s of Object.values(t.sources))e.add(s);s("./uniques.json",JSON.stringify([...e],null,2))}$?.letters&&s("./letters.txt",[...O].sort((e,t)=>e-t).join(",")),s("./publishable.json",JSON.stringify(y,null,2)),process.stdout.write("OK")}