import{existsSync as e,readFileSync as t,writeFileSync as r}from"node:fs";import{Entries as s,EntryText as n}from"@triforce-heroes/triforce-commands";import{fatal as o}from"@triforce-heroes/triforce-core/Console";import{secureHash as l}from"@triforce-heroes/triforce-core/Hash";import i from"chalk";import a from"p-queue";import{loadEngineDriver as f}from"../drivers/index.js";import{getEntryKey as c}from"../utils/entry.js";import{translate as u}from"../utils/google.js";import{guessLocale as d,simplifyLocales as p,weakLocales as m}from"../utils/locale.js";import{printProgress as g}from"../utils/progress.js";import{delay as w}from"../utils/utils.js";function h(r){return e(`./${r}/entries_default.json`)?JSON.parse(t(`./${r}/entries_default.json`,"utf8")):e(`./entries_${r}.json`)?JSON.parse(t(`./entries_${r}.json`,"utf8")):void o(`No entries.json found in ${r}`)}function v(e){return Object.fromEntries([...e.entries()].map(([e,t])=>[p(t).join(","),e]))}class ${constructor(e,t,r){this.name=e,this.toTranslator=t,this.fromTranslator=r}}class S extends ${constructor(){super("drop",e=>x(e,()=>" ").trim(),e=>e)}}function x(e,t){return e.replaceAll(/<(\d+)>/g,(e,r)=>t(Number(r)))}function j(e,t){return`<${t}>`}let A=[new $("default",e=>x(e,e=>` <${String(e)}> `),e=>e.replaceAll(/\s*<\s*(\d+)\s*>\s*/g,j)),new $("hashtag",e=>x(e,e=>` #${String(e)} `),e=>e.replaceAll(/\s*(?:#|n\s*ยบ)\s*(\d+)\s*/g,j)),new $("percent",e=>x(e,e=>` (${String(e)}%) `),e=>e.replaceAll(/\s*\(\s*(\d+)\s*%\s*\)\s*/g,j)),new $("brackets",e=>x(e,e=>` [${String(e)}] `),e=>e.replaceAll(/\s*\[\s*(\d+)\s*\]\s*/g,j)),new $("double arrows",e=>x(e,e=>` <<${String(e)}>> `),e=>e.replaceAll(/\s*<\s*<\s*(\d+)\s*>\s*>\s*/g,j)),new $("quotes",e=>x(e,e=>` ("${String(e)}") `),e=>e.replaceAll(/\s*\(\s*"\s*(\d+)\s*"\s*\)\s*/g,j)),new $("hr id",e=>x(e,e=>` <hr id="${String(e)}" /> `),e=>e.replaceAll(/\s*<hr\s*id\s*=\s*"\s*(\d+)\s*"\s*\/\s*>\s*/g,j)),new $("ears",e=>x(e,e=>` )<${String(e)}>( `),e=>e.replaceAll(/\s*\)\s*<\s*(\d+)\s*>\s*\(\s*/g,j)),new $("eyes",e=>x(e,e=>` (.)<${String(e)}>(.) `),e=>e.replaceAll(/\s*\(\s*\.\s*\)\s*<\s*(\d+)\s*>\s*\(\s*\.\s*\)\s*/g,j)),new S];function I(e){return[...e.matchAll(/<(\d+)>/g)].map(e=>Number(e[1]))}let b=[[", or "," or "],[", and "," and "]];export async function CompileCommand(p,$,x){let j=f(p);void 0===j&&o(`Unsupported engine driver: ${p}`);let N=$.split(" ");if(0===N.length&&o("No languages specified"),x?.translate!==void 0)for(let e of N)void 0===d(e)&&o(`Invalid source language: ${x.translate}`);let y=new Map;for(let e of N){let t=d(e);void 0===t&&o(`Unsupported language: ${e}`),y.set(e,t)}let C=new Map;for await(let[o,l]of y.entries()){let f=h(o);if(x?.translate===void 0)C.set(l,new Map(f.map(e=>[c(e),[e.source]])));else{let d,p;process.stdout.write(`Translating from ${o} as ${l}...

`);let h=`./cached-translations.${l}.json`,v=new Map(e(h)?JSON.parse(t(h,"utf8")):[]),$=0,N=setInterval(()=>{d!==p&&(p=d,g($,f.length,p))},1e3);function O(){process.stdout.write(i.greenBright("  CACHE SAVED\n\n")),r(h,JSON.stringify([...v.entries()],null,2))}let y=setInterval(O,6e4);g(0,f.length);let T=new a({concurrency:x.concurrences});for(let e of f)T.add(async()=>{let t=new s(j.parse(e.source).entries.map(e=>{if(e instanceof n){let{text:t}=e;for(let[e,r]of b)t=t.replaceAll(e,r);return new n(t)}return e})),r=t.toCompressed(),o=r.toCompressed(),i=o.toText(),a=null;if(v.has(i))a=v.get(i);else{let e=I(i);e:for(let t=0;t<3;t++)for(let r of A){if(a=null,r instanceof S)break e;try{a=await u(l,x.translate,r.toTranslator(i),x.cookieId)}catch{await w(1e3*t);continue e}if(e.length>0&&JSON.stringify(e)!==JSON.stringify(I(r.fromTranslator(a)))){if(m.includes(l)){a=null;break e}continue}if(!(a=r.fromTranslator(a)).includes("><")){v.set(i,a);break e}}}$++,e.translation=r.fromCompressed(o.fromCompressed(a??"",r),t),e.translationIndex=j.parse(e.translation).toIndex(),d={from:t.toIndex(),to:e.translationIndex}});await T.onIdle(),clearInterval(y),O(),clearInterval(N),g(f.length,f.length),C.set(o,new Map(f.map(e=>[c(e),[e.source,e.translation,e.translationIndex]])))}}process.stdout.write("Preparing publishables... ");let T=[],J=h(N.at(0)),M=new Set;for await(let e of J.values()){let t=c(e),r=new Map,s=new Map;for(let[e,n]of y.entries()){let o=C.get(e);if(void 0===o)continue;let[l,i]=o.get(t);if(r.has(l))r.get(l).push(e);else if(r.set(l,[e]),x?.letters&&!m.includes(n))for(let e of j.parse(l).toCompressed().toText())M.add(e.codePointAt(0));if(x?.translate!==void 0){if(s.has(i))s.get(i).push(e);else if(s.set(i,[e]),x.letters)for(let e of j.parse(i).toCompressed().toText())M.add(e.codePointAt(0))}}let n=C.get(N.at(0))?.get(t)?.[2],o={index:await l(Buffer.from(t)),resource:e.resource,reference:e.reference,...void 0!==e.context&&{context:e.context},sourceIndex:e.sourceIndex,...x?.translate!==void 0&&void 0!==n&&{translationIndex:n},sources:v(r),...x?.translate!==void 0&&{translations:v(s)}};T.push(o)}if(x?.uniques){let e=new Set;for(let t of T)for(let r of Object.values(t.sources))e.add(r);r("./uniques.json",JSON.stringify([...e],null,2))}x?.letters&&r("./letters.txt",[...M].sort((e,t)=>e-t).join(",")),r("./publishable.json",JSON.stringify(T,null,2)),process.stdout.write("OK")}