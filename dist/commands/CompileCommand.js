import{existsSync as e,readFileSync as t,writeFileSync as s}from"node:fs";import{Entries as r,EntryText as o}from"@triforce-heroes/triforce-commands";import{fatal as n}from"@triforce-heroes/triforce-core/Console";import{secureHash as l}from"@triforce-heroes/triforce-core/Hash";import a from"chalk";import i from"p-queue";import{loadEngineDriver as f}from"../drivers/index.js";import{getEntryKey as c}from"../utils/entry.js";import{translate as u}from"../utils/google.js";import{guessLocale as d,simplifyLocales as p,weakLocales as g}from"../utils/locale.js";import{printProgress as m}from"../utils/progress.js";import{delay as w}from"../utils/utils.js";function h(s){return e(`./${s}/entries_default.json`)?JSON.parse(t(`./${s}/entries_default.json`,"utf8")):e(`./entries_${s}.json`)?JSON.parse(t(`./entries_${s}.json`,"utf8")):void n(`No entries.json found in ${s}`)}function $(e){return Object.fromEntries([...e.entries()].map(([e,t])=>[p(t).join(","),e]))}class S{constructor(e,t,s){this.name=e,this.toTranslator=t,this.fromTranslator=s}}class v extends S{constructor(){super("drop",e=>x(e,()=>" ").trim(),e=>e)}}function x(e,t){return e.replaceAll(/<(\d+)>/g,(e,s)=>t(Number(s)))}function j(e,t){return`<${t}>`}let A=[new S("default",e=>x(e,e=>` <${String(e)}> `),e=>e.replaceAll(/\s*<\s*(\d+)\s*>\s*/g,j)),new S("hashtag",e=>x(e,e=>` #${String(e)} `),e=>e.replaceAll(/\s*(?:#|n\s*ยบ)\s*(\d+)\s*/g,j)),new S("percent",e=>x(e,e=>` (${String(e)}%) `),e=>e.replaceAll(/\s*\(\s*(\d+)\s*%\s*\)\s*/g,j)),new S("brackets",e=>x(e,e=>` [${String(e)}] `),e=>e.replaceAll(/\s*\[\s*(\d+)\s*\]\s*/g,j)),new S("double arrows",e=>x(e,e=>` <<${String(e)}>> `),e=>e.replaceAll(/\s*<\s*<\s*(\d+)\s*>\s*>\s*/g,j)),new S("quotes",e=>x(e,e=>` ("${String(e)}") `),e=>e.replaceAll(/\s*\(\s*"\s*(\d+)\s*"\s*\)\s*/g,j)),new S("hr id",e=>x(e,e=>` <hr id="${String(e)}" /> `),e=>e.replaceAll(/\s*<hr\s*id\s*=\s*"\s*(\d+)\s*"\s*\/\s*>\s*/g,j)),new S("ears",e=>x(e,e=>` )<${String(e)}>( `),e=>e.replaceAll(/\s*\)\s*<\s*(\d+)\s*>\s*\(\s*/g,j)),new S("eyes",e=>x(e,e=>` (.)<${String(e)}>(.) `),e=>e.replaceAll(/\s*\(\s*\.\s*\)\s*<\s*(\d+)\s*>\s*\(\s*\.\s*\)\s*/g,j)),new S("breaks",e=>x(e,e=>`\r
<${String(e)}>\r
`),e=>e.replaceAll(/\s*<\s*(\d+)\s*>\s*/g,j)),new v];function I(e){return[...e.matchAll(/<(\d+)>/g)].map(e=>Number(e[1]))}let b=[[", or "," or "],[", and "," and "]];export async function CompileCommand(p,S,x){let j=f(p);void 0===j&&n(`Unsupported engine driver: ${p}`);let y=S.split(" ");if(0===y.length&&n("No languages specified"),x?.translate!==void 0)for(let e of y)void 0===d(e)&&n(`Invalid source language: ${x.translate}`);let N=new Map;for(let e of y){let t=d(e);void 0===t&&n(`Unsupported language: ${e}`),N.set(e,t)}let C=new Map;for await(let[l,f]of N.entries()){let d=h(l);if(x?.translate===void 0)C.set(f,new Map(d.map(e=>[c(e),[e.source]])));else{let p,h;process.stdout.write(`Translating from ${l} as ${f}...

`);let $=`./cached-translations.${f}.json`,S=new Map(e($)?JSON.parse(t($,"utf8")):[]),y=0,N=setInterval(()=>{p!==h&&(h=p,m(y,d.length,h))},1e3);function O(){process.stdout.write(a.greenBright("  CACHE SAVED\n\n")),s($,JSON.stringify([...S.entries()],null,2))}let T=setInterval(O,6e4);m(0,d.length);let k=new i({concurrency:x.concurrences});for(let e of d)k.add(async()=>{let t=new r(j.parse(e.source).entries.map(e=>{if(e instanceof o){let{text:t}=e;for(let[e,s]of b)t=t.replaceAll(e,s);return new o(t)}return e})),s=t.toCompressed(),l=s.toCompressed(),a=l.toText(),i=null;if(S.has(a))i=S.get(a);else{let e=I(a);e:for(let t=0;t<3;t++)for(let s of A){if(i=null,s instanceof v)break e;try{i=await u(f,x.translate,s.toTranslator(a),x.cookieId)}catch(e){"Too Many Requests"===e.message&&n("Too many requests: requires --cookie-id"),await w(1e3*t);continue e}if(e.length>0&&JSON.stringify(e)!==JSON.stringify(I(s.fromTranslator(i)))){if(g.includes(f)){i=null;break e}continue}if(!(i=s.fromTranslator(i)).includes("><")){S.set(a,i);break e}}}y++,e.translation=s.fromCompressed(l.fromCompressed(i??"",s),t),e.translationIndex=j.parse(e.translation).toIndex(),p={from:t.toIndex(),to:e.translationIndex}});await k.onIdle(),clearInterval(T),O(),clearInterval(N),m(d.length,d.length),C.set(l,new Map(d.map(e=>[c(e),[e.source,e.translation,e.translationIndex]])))}}process.stdout.write("Preparing publishables... ");let T=[],k=h(y.at(0)),J=new Set;for await(let e of k.values()){let t=c(e),s=new Map,r=new Map;for(let[e,o]of N.entries()){let n=C.get(e);if(!n?.has(t))continue;let[l,a]=n.get(t);if(s.has(l))s.get(l).push(e);else if(s.set(l,[e]),x?.letters&&!g.includes(o))for(let e of j.parse(l).toCompressed().toText())J.add(e.codePointAt(0));if(x?.translate!==void 0){if(r.has(a))r.get(a).push(e);else if(r.set(a,[e]),x.letters)for(let e of j.parse(a).toCompressed().toText())J.add(e.codePointAt(0))}}let o=C.get(y.at(0))?.get(t)?.[2],n={index:await l(Buffer.from(t)),resource:e.resource,reference:e.reference,...void 0!==e.context&&{context:e.context},sourceIndex:e.sourceIndex,...x?.translate!==void 0&&void 0!==o&&{translationIndex:o},sources:$(s),...x?.translate!==void 0&&{translations:$(r)}};T.push(n)}if(x?.uniques){let e=new Set;for(let t of T)for(let s of Object.values(t.sources))e.add(s);s("./uniques.json",JSON.stringify([...e],null,2))}x?.letters&&s("./letters.txt",[...J].sort((e,t)=>e-t).join(",")),s("./publishable.json",JSON.stringify(T,null,2)),process.stdout.write("OK")}