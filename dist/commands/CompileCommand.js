import{existsSync as e,readFileSync as t,writeFileSync as r}from"node:fs";import{fatal as o}from"@triforce-heroes/triforce-core/Console";import{secureHash as s}from"@triforce-heroes/triforce-core/Hash";import{supportedLanguages as n,translate as a}from"@triforce-heroes/triforce-core/Translator";import l from"p-queue";import{loadEngineDriver as i}from"../drivers/index.js";import{getEntryKey as f}from"../utils/entry.js";import{guessLocale as u,simplifyLocales as c}from"../utils/locale.js";import{printProgress as d}from"../utils/progress.js";function p(r){return e(`./${r}/entries_default.json`)?JSON.parse(t(`./${r}/entries_default.json`,"utf8")):e(`./entries_${r}.json`)?JSON.parse(t(`./entries_${r}.json`,"utf8")):void o(`No entries.json found in ${r}`)}function m(e){return Object.fromEntries([...e.entries()].map(([e,t])=>[c(t).join(","),e]))}export async function CompileCommand(e,t,c){let g=i(e);void 0===g&&o(`Unsupported engine driver: ${e}`);let v=t.split(" ");0===v.length&&o("No languages specified"),c?.translate===void 0||n.includes(c.translate)||o(`Invalid source language: ${c.translate}`);let h=new Map;for(let e of v){let t=u(e);void 0===t&&o(`Unsupported language: ${e}`),h.set(e,t)}let w=new Map;for await(let[e,t]of h.entries()){let r=p(e);if(c?.translate===void 0)w.set(t,new Map(r.map(e=>[f(e),[e.source]])));else{let o,s;process.stdout.write(`Translating from ${e}...

`);let n=new Map,i=0,u=setInterval(()=>{o!==s&&(s=o,d(i,r.length,s))},1e3);d(0,r.length);let p=new l({concurrency:8});for(let e of r)p.add(async()=>{let r=g.parse(e.source),s=r.toCompressed(),l=s.toText(),f=null;if(n.has(l))f=n.get(l);else for(let e=0;e<10;e++)try{f=await a("http://127.0.0.1:5000",t,c.translate,l),n.set(l,f);break}catch{}i++,e.translation=s.fromCompressed(f??"",r),e.translationIndex=g.parse(e.translation).toIndex(),o={from:r.toIndex(),to:e.translationIndex}});await p.onIdle(),clearInterval(u),d(r.length,r.length),w.set(t,new Map(r.map(e=>[f(e),[e.source,e.translation,e.translationIndex]])))}}process.stdout.write("Preparing publishables... ");let j=[];for await(let e of p(v.at(0)).values()){let t=f(e),r=new Map,o=new Map;for(let e of h.values()){let s=w.get(e);if(void 0===s)continue;let[n,a]=s.get(t);r.has(n)?r.get(n).push(e):r.set(n,[e]),c?.translate!==void 0&&(o.has(a)?o.get(a).push(e):o.set(a,[e]))}let n=w.get(v.at(0))?.get(t)?.[2],a={index:await s(Buffer.from(t)),resource:e.resource,reference:e.reference,...void 0!==e.context&&{context:e.context},sourceIndex:e.sourceIndex,...c?.translate!==void 0&&void 0!==n&&{translationIndex:n},sources:m(r),...c?.translate!==void 0&&{translations:m(o)}};j.push(a)}if(c?.uniques){let e=new Set;for(let t of j)for(let r of Object.values(t.sources))e.add(r);r("./uniques.json",JSON.stringify([...e],null,2))}if(c?.letters){let e=new Set;for(let t of j)for(let r of Object.values(t.sources))for(let t of r)e.add(t);r("./letters.txt",[...e].map(e=>e.codePointAt(0)).sort((e,t)=>e-t).join(","))}r("./publishable.json",JSON.stringify(j,null,2)),process.stdout.write("OK")}