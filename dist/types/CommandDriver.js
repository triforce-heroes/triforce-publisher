function e(e,s){return`<${s}>`}export class CommandDriver{constructor(e,s,r){this.name=e,this.toTranslator=s,this.fromTranslator=r}}export function toReplaceCommands(e,s){return e.replaceAll(/<(?<command>\d+)>/g,(e,r)=>s(Number(r)))}export class DropCommandDriver extends CommandDriver{constructor(){super("drop",e=>toReplaceCommands(e,()=>" ").trim(),e=>e)}}export const commandDrivers=[new CommandDriver("default",e=>toReplaceCommands(e,e=>` <${String(e)}> `),s=>s.replaceAll(/\s*<\s*(?<command>\d+)\s*>\s*/g,e)),new CommandDriver("hashtag",e=>toReplaceCommands(e,e=>` #${String(e)} `),s=>s.replaceAll(/\s*(?:#|n\s*ยบ)\s*(?<command>\d+)\s*/g,e)),new CommandDriver("percent",e=>toReplaceCommands(e,e=>` (${String(e)}%) `),s=>s.replaceAll(/\s*\(\s*(?<command>\d+)\s*%\s*\)\s*/g,e)),new CommandDriver("brackets",e=>toReplaceCommands(e,e=>` [${String(e)}] `),s=>s.replaceAll(/\s*\[\s*(?<command>\d+)\s*\]\s*/g,e)),new CommandDriver("double arrows",e=>toReplaceCommands(e,e=>` <<${String(e)}>> `),s=>s.replaceAll(/\s*<\s*<\s*(?<command>\d+)\s*>\s*>\s*/g,e)),new CommandDriver("quotes",e=>toReplaceCommands(e,e=>` ("${String(e)}") `),s=>s.replaceAll(/\s*\(\s*"\s*(?<command>\d+)\s*"\s*\)\s*/g,e)),new CommandDriver("hr id",e=>toReplaceCommands(e,e=>` <hr id="${String(e)}" /> `),s=>s.replaceAll(/\s*<hr\s*id\s*=\s*"\s*(?<command>\d+)\s*"\s*\/\s*>\s*/g,e)),new CommandDriver("ears",e=>toReplaceCommands(e,e=>` )<${String(e)}>( `),s=>s.replaceAll(/\s*\)\s*<\s*(?<command>\d+)\s*>\s*\(\s*/g,e)),new CommandDriver("eyes",e=>toReplaceCommands(e,e=>` (.)<${String(e)}>(.) `),s=>s.replaceAll(/\s*\(\s*\.\s*\)\s*<\s*(?<command>\d+)\s*>\s*\(\s*\.\s*\)\s*/g,e)),new CommandDriver("breaks",e=>toReplaceCommands(e,e=>`\r
<${String(e)}>\r
`),s=>s.replaceAll(/\s*<\s*(?<command>\d+)\s*>\s*/g,e)),new DropCommandDriver];